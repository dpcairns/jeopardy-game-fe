{"version":3,"sources":["LoginPage.js","SignUp.js","GamePage.js","Header.js","PrivateRoute.js","ResultsPage.js","Leaderboard.js","DetailPage.js","App.js","serviceWorker.js","index.js"],"names":["LoginPage","state","email","password","handleSubmit","e","a","preventDefault","console","log","request","post","tokenData","props","handleTokenChange","body","token","display_name","history","push","className","onSubmit","this","onChange","setState","target","value","to","Component","SignUp","set","GamePage","data","currentQuestion","title","answerInput","questionsAsked","score","answeredRight","answeredWrong","inputForm","username","displayName","componentDidMount","get","removeSpecialRegex","question","answer","includes","replace","category","toLowerCase","handleClick","handleResultsClick","resultsObject","total_score","put","localStorage","setItem","JSON","stringify","getItem","name","onClick","Header","width","openNav","closeNav","handleLogout","style","href","PrivateRoute","render","rest","ResultsPage","Number","allTimeScore","gamesPlayed","games_played","Leaderboard","leaderboardData","map","item","id","DetailPage","playerData","match","params","App","myToken","path","exact","routerProps","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+UAIqBA,E,4MAEjBC,MAAQ,CACJC,MAAO,GACPC,SAAU,I,EAGdC,a,uCAAe,WAAMC,GAAN,eAAAC,EAAA,6DACXD,EAAEE,iBACFC,QAAQC,WAAW,EAAKR,MAAMC,aAAe,EAAKD,MAAME,UAF7C,SAGWO,IAAQC,KAAR,4DAA0E,EAAKV,OAH1F,OAGPW,EAHO,OAIX,EAAKC,MAAMC,kBAAkBF,EAAUG,KAAKC,MAAOJ,EAAUG,KAAKE,cAClE,EAAKJ,MAAMK,QAAQC,KAAK,cALb,2C,6GASL,IAAD,OAEL,OACI,yBAAKC,UAAU,mBACX,yBAAKA,UAAU,mBAAf,iOAGA,0BAAMA,UAAU,aAAaC,SAAUC,KAAKlB,cACxC,wCAEI,2BAAOmB,SAAW,SAAClB,GAAD,OAAM,EAAKmB,SAAS,CAACtB,MAAOG,EAAEoB,OAAOC,YAE3D,2CAEI,2BAAOH,SAAW,SAAClB,GAAD,OAAM,EAAKmB,SAAS,CAACrB,SAAUE,EAAEoB,OAAOC,YAE9D,4BAAQN,UAAY,gBAApB,SACA,yBAAKA,UAAU,gBAAf,aACc,kBAAC,IAAD,CAAMO,GAAI,WAAV,wB,GAlCKC,aCDlBC,E,4MACjB5B,MAAQ,CACJC,MAAO,GACPC,SAAU,GACVc,aAAc,I,EAGlBb,a,uCAAe,WAAMC,GAAN,eAAAC,EAAA,6DACXD,EAAEE,iBADS,SAGWG,IAAQC,KAAR,4DAA0E,EAAKV,OAH1F,cAGPW,EAHO,OAIX,EAAKC,MAAMC,kBAAkBF,EAAUG,KAAKC,MAAOJ,EAAUG,KAAKE,cAJvD,SAMLP,IAAQC,KAAR,6DACLmB,IADK,gBACgBlB,EAAUG,KAAKC,OAP1B,OASX,EAAKH,MAAMK,QAAQC,KAAK,cATb,2C,6GAaL,IAAD,OAEL,OADAX,QAAQC,IAAIa,KAAKrB,OAEb,6BACI,0BAAMmB,UAAU,eAAeC,SAAUC,KAAKlB,cAC1C,wCAEI,2BAAOmB,SAAW,SAAClB,GAAD,OAAM,EAAKmB,SAAS,CAACtB,MAAOG,EAAEoB,OAAOC,YAE3D,2CAEI,2BAAOH,SAAW,SAAClB,GAAD,OAAM,EAAKmB,SAAS,CAACrB,SAAUE,EAAEoB,OAAOC,YAE9D,2CAEI,2BAAOH,SAAW,SAAClB,GAAD,OAAM,EAAKmB,SAAS,CAACP,aAAcZ,EAAEoB,OAAOC,YAGlE,4BAAQN,UAAU,kBAAlB,iB,GAtCgBQ,aCAfG,E,4MAClB9B,MAAO,CACH+B,KAAM,GACNC,gBAAiB,GACjBC,MAAO,GACPC,YAAa,GACbC,eAAgB,GAChBC,MAAO,EACPC,eAAe,EACfC,eAAe,EACfC,WAAW,EACXC,SAAU,EAAK5B,MAAM6B,a,EAIzBC,kB,sBAAoB,8BAAArC,EAAA,sEACCI,IAAQkC,IAAR,0CADD,OACZZ,EADY,OAEVa,EAAqB,WAFX,UAIiB,KAA1Bb,EAAKjB,KAAK,GAAG+B,SAJJ,iCAKEpC,IAAQkC,IAAR,0CALF,OAKXZ,EALW,8BAQfxB,QAAQC,IAAIuB,EAAKjB,KAAK,GAAGgC,QAEtBf,EAAKjB,KAAK,GAAGgC,OAAOC,SAAS,OAC9BhB,EAAKjB,KAAK,GAAGgC,OAASf,EAAKjB,KAAK,GAAGgC,OAAOE,QAAQJ,EAAoB,KAGzE,EAAKrB,SAAS,CACVS,gBAAiBD,EAAKjB,KAAK,GAAG+B,SAC9BZ,MAAOF,EAAKjB,KAAK,GAAGmC,SAAShB,MAC7BF,KAAMA,EAAKjB,KAAK,KAEnBP,QAAQC,IAAI,EAAKR,MAAM+B,KAAKkB,SAAShB,OAnBtB,4C,EAsBpB9B,a,uCAAe,WAAMC,GAAN,SAAAC,EAAA,sDACVD,EAAEE,iBAEC,EAAKN,MAAM+B,KAAKe,OAAOI,gBAAkB,EAAKlD,MAAMkC,YAAYgB,cAC/D,EAAK3B,SAAS,CACVc,eAAe,EACfC,eAAe,EACfF,MAAO,EAAKpC,MAAMoC,MAAQ,IAG9B,EAAKb,SAAS,CACVc,eAAe,EACfC,eAAe,IAGvB,EAAKf,SAAS,CACNgB,WAAW,EACXJ,eAAgB,EAAKnC,MAAMmC,eAAiB,IAGpD5B,QAAQC,IAAI,EAAKR,OApBP,2C,wDAwBfmD,Y,sBAAc,8BAAA9C,EAAA,sEACII,IAAQkC,IAAR,0CADJ,OACTZ,EADS,OAEPa,EAAqB,WAC3BrC,QAAQC,IAAIuB,EAAKjB,KAAK,IAHT,UAKmB,KAA1BiB,EAAKjB,KAAK,GAAG+B,SALN,iCAMIpC,IAAQkC,IAAR,0CANJ,OAMTZ,EANS,8BASbxB,QAAQC,IAAIuB,EAAKjB,KAAK,GAAGgC,QAEtBf,EAAKjB,KAAK,GAAGgC,OAAOC,SAAS,OAC9BhB,EAAKjB,KAAK,GAAGgC,OAASf,EAAKjB,KAAK,GAAGgC,OAASf,EAAKjB,KAAK,GAAGgC,OACxDE,QAAQJ,EAAoB,KAG/B,EAAKrB,SAAS,CACVS,gBAAiBD,EAAKjB,KAAK,GAAG+B,SAC9BZ,MAAOF,EAAKjB,KAAK,GAAGmC,SAAShB,MAC7BF,KAAMA,EAAKjB,KAAK,GAChByB,WAAW,EACXF,eAAe,EACfC,eAAe,IAtBN,4C,EA0Bdc,mB,sBAAqB,4BAAA/C,EAAA,6DACXgD,EAAgB,CAClBC,YAAa,EAAKtD,MAAMoC,OAFX,SAIX3B,IAAQ8C,IAAR,4DAAyEF,GAC9ExB,IAAI,gBAAiB,EAAKjB,MAAMG,OALhB,OAOjByC,aAAaC,QAAQ,YAAaC,KAAKC,UAAU,EAAK3D,MAAMoC,QAC5D7B,QAAQC,IAAIgD,aAAaI,QAAQ,cACjC,EAAKhD,MAAMK,QAAQC,KAAK,aATP,2C,uDAaV,IAAD,SACuCG,KAAKrB,MAA1CgC,EADF,EACEA,gBAAiBC,EADnB,EACmBA,MAAOO,EAD1B,EAC0BA,SAC/B,OACI,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,qBACX,8CAAoBE,KAAKrB,MAAMmC,gBAC/B,qCAAWd,KAAKrB,MAAMoC,QAE9B,yBAAKjB,UAAU,eACVE,KAAKrB,MAAMqC,eAAiB,gDAC5BhB,KAAKrB,MAAMsC,eAAiB,4EACTjB,KAAKrB,MAAM+B,KAAKe,SAElCzB,KAAKrB,MAAMuC,UACb,0BAAMnB,SAAUC,KAAKlB,cACjB,yBAAKgB,UAAU,gBACX,wCAAcc,GACd,wCAAcD,IAElB,+BACI,2BAAIQ,EAAJ,0BACA,2BAAOqB,KAAK,SAASvC,SAAU,SAAClB,GAAD,OAAO,EAAKmB,SAAS,CAACW,YAAa9B,EAAEoB,OAAOC,YAE/E,4BAAQN,UAAU,oBAAlB,WAEDE,KAAKrB,MAAMmC,eAAiB,EAAI,4BAAQhB,UAAU,mBAAmB2C,QAASzC,KAAK8B,aAAnD,QAAgF,4BAAQhC,UAAU,mBAAmB2C,QAASzC,KAAK+B,oBAAnD,gB,GA7H7FzB,aCAjBoC,E,4MACjB/D,MAAQ,CACJgE,MAAO,G,EAGXC,QAAU,WACN,EAAK1C,SAAS,CACVyC,MAAO,O,EAGfE,SAAW,WACP,EAAK3C,SAAS,CACVyC,MAAO,K,EAIfG,aAAe,WACX,EAAKD,WACL,EAAKtD,MAAMC,kBAAkB,K,uDAI7B,OACI,6BACI,0BAAMM,UAAU,cAAc2C,QAASzC,KAAK4C,SAA5C,UACA,yBAAK9C,UAAU,mBACX,uBAAGA,UAAU,SAAb,aACA,uBAAGA,UAAU,SAAb,SAEJ,yBAAKA,UAAU,SAASiD,MAAO,CAAEJ,MAAO3C,KAAKrB,MAAMgE,QAC/C,uBAAGK,KAAK,qBAAqBlD,UAAU,eAAe2C,QAASzC,KAAK6C,UAApE,QACA,2BAAG,kBAAC,IAAD,CAAMxC,GAAI,UAAWoC,QAASzC,KAAK6C,UAAnC,aACH,2BAAG,kBAAC,IAAD,CAAMxC,GAAI,IAAKoC,QAASzC,KAAK6C,UAA7B,YACH,2BAAG,kBAAC,IAAD,CAAMxC,GAAI,eAAgBoC,QAASzC,KAAK6C,UAAxC,kBACH,2BAAG,kBAAC,IAAD,CAAMxC,GAAI,YAAaoC,QAASzC,KAAK6C,UAArC,gBACH,2BAAG,kBAAC,IAAD,CAAMxC,GAAI,IAAKoC,QAASzC,KAAK8C,cAA7B,iB,GAnCaxC,a,QCOrB2C,EARM,SAAC,GAAoC,IAA1B3C,EAAyB,EAAjC4C,OAAsBC,EAAW,0BACjD,OACI,kBAAC,IAAD,iBACIA,EADJ,CAEAD,OAAQ,SAAA3D,GAAK,OAAK4D,EAAKzD,MAAQ,kBAACY,EAAD,iBAAef,EAAW4D,IAAW,kBAAC,IAAD,CAAU9C,GAAG,WCHxE+C,E,4MAEjBzE,MAAQ,CACJoC,MAAOsC,OAAOlB,aAAaI,QAAQ,cACnCe,aAAc,EACdC,YAAa,G,EAIjBlC,kB,sBAAoB,4BAAArC,EAAA,sEACGI,IAAQkC,IAAR,8DACQd,IAAI,gBAAiB2B,aAAaI,QAAQ,cAFrD,OACV7B,EADU,OAGRxB,QAAQC,IAAIuB,GACpB,EAAKR,SAAS,CAAEoD,aAAc5C,EAAKjB,KAAK,GAAGwC,YAC3BsB,YAAa7C,EAAKjB,KAAK,GAAG+D,eAL1B,2C,uDASV,IAAD,OACL,OACI,yBAAK1D,UAAU,eACX,sCAAaE,KAAKrB,MAAMoC,MAAxB,OACA,+CAAsBf,KAAKrB,MAAM2E,cACjC,6CAAoBtD,KAAKrB,MAAM4E,aAC/B,4BAAQzD,UAAU,oBAAoB2C,QAAS,kBAAM,EAAKlD,MAAMK,QAAQC,KAAK,gBAA7E,e,GAxByBS,aCCpBmD,E,4MAEjB9E,MAAQ,CACJ+E,gBAAiB,I,EAGrBrC,kB,sBAAoB,4BAAArC,EAAA,sEAEGI,IAAQkC,IAAR,6DAFH,OAEVZ,EAFU,OAGhBxB,QAAQC,IAAIuB,EAAKjB,MACjB,EAAKS,SAAS,CAAEwD,gBAAiBhD,EAAKjB,OAJtB,2C,uDAShB,OACI,6BAEMO,KAAKrB,MAAM+E,gBAAgBC,KAAI,SAAAC,GAC5B,OAAO,yBAAK9D,UAAU,eACb,kBAAC,IAAD,CAAMO,GAAE,sBAAiBuD,EAAKC,KAA9B,IAAqC,2BAAID,EAAKpB,KAAT,KACnC,6CAAmBoB,EAAKJ,aAAxB,KACA,4CAAkBI,EAAK3B,YAAvB,e,GAtBS3B,aCDpBwD,E,4MAEjBnF,MAAQ,CACJoF,WAAY,I,EAIhB1C,kB,sBAAoB,4BAAArC,EAAA,sEAEGI,IAAQkC,IAAR,gEAAqE,EAAK/B,MAAMyE,MAAMC,OAAOJ,KAFhG,OAEVnD,EAFU,OAGhBxB,QAAQC,IAAI,QAAUuB,GACtBxB,QAAQC,IAAI,EAAKI,MAAMyE,MAAMC,QAC7B,EAAK/D,SAAS,CAAE6D,WAAYrD,EAAKjB,KAAK,KALtB,2C,uDASV,IAAD,EAEmCO,KAAKrB,MAAMoF,WAA9CvB,EAFA,EAEAA,KAAMgB,EAFN,EAEMA,aAAcvB,EAFpB,EAEoBA,YACzB,OACI,6BAEI,yBAAKnC,UAAU,gBACZ,+BAAK,SAAW0C,EAAhB,KACA,gCAAM,iBAAmBgB,EAAzB,KACA,+BAAK,gBAAkBvB,EAAvB,W,GAzBqB3B,aCanB4D,G,kNAEjBvF,MAAQ,CACNe,MAAOyC,aAAaI,QAAQ,aAC5BnB,YAAa,I,EAGf5B,kBAAoB,SAAC2E,EAAS/C,GAC5B,EAAKlB,SAAS,CAACR,MAAOyE,EACR/C,YAAaA,IAC3Be,aAAaC,QAAQ,YAAa+B,I,uDAG1B,IAAD,OACL,OACI,6BACI,kBAAC,IAAD,KAEE,kBAAC,EAAD,CAAQ/C,YAAepB,KAAKrB,MAAMyC,YAAa5B,kBAAmBQ,KAAKR,oBACrE,kBAAC,IAAD,KAEI,kBAAC,IAAD,CACI4E,KAAK,IACLC,OAAK,EACLnB,OAAQ,SAACoB,GAAD,OAAiB,kBAAC,EAAD,eAAW9E,kBAAmB,EAAKA,mBAAuB8E,OAEvF,kBAAC,IAAD,CACIF,KAAK,UACLC,OAAK,EACLnB,OAAQ,SAACoB,GAAD,OAAiB,kBAAC,EAAD,eAAQ9E,kBAAmB,EAAKA,mBAAuB8E,OAIpF,kBAAC,IAAD,CACIF,KAAK,eACLC,OAAK,EACLnB,OAAQ,SAACoB,GAAD,OAAiB,kBAAC,EAAiBA,MAI/C,kBAAC,IAAD,CACIF,KAAK,kBACLC,OAAK,EACLnB,OAAQ,SAACoB,GAAD,OAAiB,kBAAC,EAAgBA,MAI9C,kBAAC,EAAD,CACIF,KAAK,YACL1E,MAAOM,KAAKrB,MAAMe,MAClB0B,YAAapB,KAAKrB,MAAMyC,YACxB8B,OAAQ,SAACoB,GAAD,OAAiB,kBAAC,EAAaA,MAG3C,kBAAC,EAAD,CACIF,KAAK,WACL1E,MAAOM,KAAKrB,MAAMe,MAClB0B,YAAapB,KAAKrB,MAAMyC,YACxB8B,OAAQ,SAACoB,GAAD,OAAiB,kBAAC,EAAgBA,a,GA1DrChE,cCJbiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASV,MACvB,2DCZNW,IAASzB,OACP,kBAAC,IAAM0B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpG,QAAQoG,MAAMA,EAAMC,c","file":"static/js/main.de40e447.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport request from 'superagent';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class LoginPage extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    \r\n    handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        console.log(typeof(this.state.email), typeof(this.state.password))\r\n        let tokenData = await request.post(`https://enigmatic-springs-29291.herokuapp.com/auth/signin`, this.state)\r\n        this.props.handleTokenChange(tokenData.body.token, tokenData.body.display_name)\r\n        this.props.history.push('./gamepage')\r\n    }\r\n    \r\n\r\n    render() {\r\n        // console.log(this.state)\r\n        return (\r\n            <div className='login-container'>\r\n                <div className='rules-container'>\r\n                    Jeopardy Lite is based off of the long-running game show, Jeopardy! You will be asked ten questions. The answers do not have to be in question form, and are not case sensitive (spelling does matter though, so be careful).\r\n                </div>\r\n                <form className='login-form' onSubmit={this.handleSubmit} >\r\n                    <label>\r\n                        Email:\r\n                        <input onChange={ (e)=> this.setState({email: e.target.value}) } ></input>\r\n                    </label>\r\n                    <label>\r\n                        Password:\r\n                        <input onChange={ (e)=> this.setState({password: e.target.value}) } ></input>\r\n                    </label>\r\n                    <button className = 'login-button'>Login</button>\r\n                    <div className='sign-up-text'>\r\n                        New User? <Link to ='/signup'>Sign Up Here!</Link>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport request from 'superagent';\r\n\r\nexport default class SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        display_name: ''\r\n    }\r\n    \r\n    handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n\r\n        let tokenData = await request.post(`https://enigmatic-springs-29291.herokuapp.com/auth/signup`, this.state)\r\n        this.props.handleTokenChange(tokenData.body.token, tokenData.body.display_name)\r\n\r\n        await request.post(`https://enigmatic-springs-29291.herokuapp.com/api/results`)\r\n        .set(`Authorization`, tokenData.body.token)\r\n\r\n        this.props.history.push('./gamepage')\r\n    }\r\n    \r\n\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <div>\r\n                <form className='sign-up-form' onSubmit={this.handleSubmit} >\r\n                    <label>\r\n                        Email:\r\n                        <input onChange={ (e)=> this.setState({email: e.target.value}) } ></input>\r\n                    </label>\r\n                    <label>\r\n                        Password:\r\n                        <input onChange={ (e)=> this.setState({password: e.target.value}) } ></input>\r\n                    </label>\r\n                    <label>\r\n                        Username:\r\n                        <input onChange={ (e)=> this.setState({display_name: e.target.value}) } ></input>\r\n                    </label>\r\n\r\n                    <button className='sign-up-button'>Sign Up</button>\r\n                   \r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport request from 'superagent'\r\n\r\nexport default class GamePage extends Component {\r\n   state= {\r\n       data: [],\r\n       currentQuestion: '',\r\n       title: '',\r\n       answerInput: '',\r\n       questionsAsked: 10,\r\n       score: 0,\r\n       answeredRight: false,\r\n       answeredWrong: false,\r\n       inputForm: true,\r\n       username: this.props.displayName\r\n   }\r\n\r\n   \r\n   componentDidMount = async() => {\r\n       let data = await request.get(`https://jservice.io/api/random?count=1`)\r\n       const removeSpecialRegex = /<[^>]*>/g\r\n\r\n        while(data.body[0].question === ''){\r\n            data = await request.get(`https://jservice.io/api/random?count=1`)\r\n        }\r\n\r\n        console.log(data.body[0].answer)\r\n\r\n        if(data.body[0].answer.includes('<')){\r\n          data.body[0].answer = data.body[0].answer.replace(removeSpecialRegex, \"\")\r\n        }\r\n\r\n       this.setState({ \r\n           currentQuestion: data.body[0].question,\r\n           title: data.body[0].category.title,\r\n           data: data.body[0]\r\n        })\r\n        console.log(this.state.data.category.title)\r\n   }\r\n\r\n   handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n            \r\n        if(this.state.data.answer.toLowerCase() === this.state.answerInput.toLowerCase()) {\r\n            this.setState({\r\n                answeredRight: true,\r\n                answeredWrong: false,\r\n                score: this.state.score + 1,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                answeredRight: false,\r\n                answeredWrong: true,\r\n            })    \r\n        }\r\n        this.setState({\r\n                inputForm: false,\r\n                questionsAsked: this.state.questionsAsked - 1\r\n            })\r\n        \r\n        console.log(this.state);\r\n   }\r\n\r\n   \r\n   handleClick = async() => {\r\n    let data = await request.get(`https://jservice.io/api/random?count=1`)\r\n    const removeSpecialRegex = /<[^>]*>/g\r\n    console.log(data.body[0])\r\n\r\n    while(data.body[0].question === ''){\r\n        data = await request.get(`https://jservice.io/api/random?count=1`)\r\n    }\r\n    \r\n    console.log(data.body[0].answer)\r\n\r\n    if(data.body[0].answer.includes('<')){\r\n      data.body[0].answer = data.body[0].answer = data.body[0].answer\r\n      .replace(removeSpecialRegex, \"\")\r\n    }\r\n\r\n    this.setState({ \r\n        currentQuestion: data.body[0].question,\r\n        title: data.body[0].category.title,\r\n        data: data.body[0],\r\n        inputForm: true,\r\n        answeredRight: false,\r\n        answeredWrong: false\r\n     })\r\n   } \r\n\r\n   handleResultsClick = async() => {\r\n       const resultsObject = {\r\n           total_score: this.state.score,           \r\n       }\r\n       await request.put(`https://enigmatic-springs-29291.herokuapp.com/api/results`, resultsObject)\r\n       .set('Authorization', this.props.token)\r\n\r\n       localStorage.setItem('SCORE_KEY', JSON.stringify(this.state.score))\r\n       console.log(localStorage.getItem('SCORE_KEY'))\r\n       this.props.history.push('./results')\r\n\r\n   }\r\n\r\n    render() {\r\n       const { currentQuestion, title, username } = this.state\r\n        return (\r\n            <div className='game-form'>\r\n                <div className='current-game-data'>\r\n                    <p>Questions Left: {this.state.questionsAsked}</p>\r\n                    <p>Score: {this.state.score}</p>\r\n                </div>\r\n            <div className='result-text'>\r\n                {this.state.answeredRight && <p>You got it right!</p>}\r\n                {this.state.answeredWrong && <p>Tough break, you got it wrong!\r\n                    The answer was {this.state.data.answer}</p>}\r\n            </div>\r\n                {(this.state.inputForm) ? \r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className='question-box'>\r\n                        <p>Category: {title}</p>\r\n                        <p>Question: {currentQuestion}</p>\r\n                    </div>\r\n                    <label>\r\n                        <p>{username}, what is your answer?</p>\r\n                        <input name='answer' onChange={(e) => this.setState({answerInput: e.target.value})}></input>\r\n                    </label>\r\n                    <button className=\"game-page-button\">Answer</button>\r\n                    </form>\r\n                :  this.state.questionsAsked > 0 ? <button className=\"game-page-button\" onClick={this.handleClick}>Next</button> : <button className=\"game-page-button\" onClick={this.handleResultsClick} >Results</button>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Header extends Component {\r\n    state = {\r\n        width: 0\r\n    }\r\n    \r\n    openNav = () => {\r\n        this.setState({\r\n            width: 200\r\n        })\r\n    }\r\n    closeNav = () => {\r\n        this.setState({\r\n            width: 0\r\n        })\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.closeNav();\r\n        this.props.handleTokenChange('')\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className='open-button' onClick={this.openNav}>&#9776;</span>\r\n                <div className='title-container'>\r\n                    <p className='title'>JEOPARDY!</p>\r\n                    <p className='title'>LITE</p>\r\n                </div>\r\n                <div className='header' style={{ width: this.state.width }}>\r\n                    <a href='javascript:void(0)' className=\"close-button\" onClick={this.closeNav}>&times;</a>\r\n                    <p><Link to={'/signup'} onClick={this.closeNav}> Sign Up</Link></p>\r\n                    <p><Link to={'/'} onClick={this.closeNav}> Login </Link></p>\r\n                    <p><Link to={'/leaderboard'} onClick={this.closeNav}> LeaderBoard </Link></p>\r\n                    <p><Link to={'/gamepage'} onClick={this.closeNav}> Play Game </Link></p>\r\n                    <p><Link to={'/'} onClick={this.handleLogout}>Logout</Link></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nconst PrivateRoute = ({ render: Component, ...rest }) => {\r\n        return (\r\n            <Route \r\n            {...rest}\r\n            render={props => (rest.token ? <Component {...props} {...rest} /> : <Redirect to=\"/\" />)}\r\n        />\r\n    )\r\n}\r\nexport default PrivateRoute;","import React, { Component } from 'react'\r\nimport request from 'superagent'\r\n\r\nexport default class ResultsPage extends Component {\r\n\r\n    state = {\r\n        score: Number(localStorage.getItem('SCORE_KEY')),\r\n        allTimeScore: 0,\r\n        gamesPlayed: 0\r\n    }\r\n\r\n\r\n    componentDidMount = async() => {\r\n        const data = await request.get(`https://enigmatic-springs-29291.herokuapp.com/api/results/`)\r\n                                  .set('Authorization', localStorage.getItem('TOKEN_KEY'))\r\n                console.log(data)\r\n        this.setState({ allTimeScore: data.body[0].total_score,\r\n                        gamesPlayed: data.body[0].games_played\r\n        })                          \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='results-box'>\r\n                <p> Score: { this.state.score }/10</p>\r\n                <p> All-Time Score: { this.state.allTimeScore }</p>\r\n                <p> Games Played: { this.state.gamesPlayed }</p>\r\n                <button className='play-again-button' onClick={() => this.props.history.push('./gamepage')}>Again?</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport request from 'superagent'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Leaderboard extends Component {\r\n\r\n    state = {\r\n        leaderboardData: []\r\n    }\r\n\r\n    componentDidMount = async() => {\r\n\r\n        const data = await request.get(`https://enigmatic-springs-29291.herokuapp.com/leaderboard`)\r\n        console.log(data.body)\r\n        this.setState({ leaderboardData: data.body })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                { this.state.leaderboardData.map(item => {\r\n                     return <div className='leaderboard'>\r\n                              <Link to={`/detailpage/${item.id}`}> <p>{item.name} </p>                   \r\n                                <p> Games Played: {item.games_played} </p>\r\n                                <p> Total Score: {item.total_score} </p> \r\n                                </Link>\r\n                            </div>\r\n                }) \r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport request from 'superagent'\r\n\r\nexport default class DetailPage extends Component {\r\n\r\n    state = {\r\n        playerData: []\r\n    }\r\n\r\n    \r\n    componentDidMount = async() => {\r\n\r\n        const data = await request.get(`https://enigmatic-springs-29291.herokuapp.com/results/${this.props.match.params.id}`)\r\n        console.log('heyyy' + data)\r\n        console.log(this.props.match.params)\r\n        this.setState({ playerData: data.body[0] })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let {name, games_played, total_score} = this.state.playerData\r\n        return (\r\n            <div>\r\n                    \r\n                <div className='user-profile'>\r\n                   <p> {'Name: ' + name } </p>\r\n                   <p>  {'Games Played: ' + games_played } </p>\r\n                   <p> {'Total Score: ' + total_score } </p>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n} from \"react-router-dom\";\r\nimport LoginPage from './LoginPage.js'\r\nimport SignUp from './SignUp.js';\r\nimport GamePage from './GamePage.js'\r\nimport Header from './Header.js'\r\nimport PrivateRoute from './PrivateRoute.js'\r\nimport ResultsPage from './ResultsPage.js'\r\nimport Leaderboard from './Leaderboard.js'\r\nimport DetailPage from './DetailPage'\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n      token: localStorage.getItem('TOKEN_KEY'),\r\n      displayName: ''\r\n    }\r\n\r\n    handleTokenChange = (myToken, displayName) => {\r\n      this.setState({token: myToken,\r\n                    displayName: displayName})\r\n      localStorage.setItem('TOKEN_KEY', myToken)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n\r\n                  <Header displayName = {this.state.displayName} handleTokenChange={this.handleTokenChange}/>\r\n                    <Switch>\r\n\r\n                        <Route\r\n                            path=\"/\"\r\n                            exact\r\n                            render={(routerProps) => <LoginPage handleTokenChange={this.handleTokenChange} {...routerProps} />}                       \r\n                        />\r\n                        <Route\r\n                            path=\"/signup\"\r\n                            exact\r\n                            render={(routerProps) => <SignUp handleTokenChange={this.handleTokenChange} {...routerProps} />}\r\n\r\n                        />\r\n\r\n                        <Route\r\n                            path=\"/leaderboard\"\r\n                            exact\r\n                            render={(routerProps) => <Leaderboard  {...routerProps} />}\r\n\r\n                        />\r\n\r\n                        <Route\r\n                            path=\"/detailpage/:id\"\r\n                            exact\r\n                            render={(routerProps) => <DetailPage  {...routerProps} />}\r\n\r\n                        />\r\n                        \r\n                        <PrivateRoute\r\n                            path=\"/gamepage\"\r\n                            token={this.state.token}\r\n                            displayName={this.state.displayName}                            \r\n                            render={(routerProps) => <GamePage {...routerProps} />}\r\n\r\n                        />\r\n                        <PrivateRoute\r\n                            path=\"/results\"\r\n                            token={this.state.token}\r\n                            displayName={this.state.displayName}                            \r\n                            render={(routerProps) => <ResultsPage {...routerProps} />}\r\n\r\n                        />\r\n\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}